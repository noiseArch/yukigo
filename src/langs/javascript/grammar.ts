// Generated automatically by nearley, version 2.20.1
// http://github.com/Hardmath123/nearley
// Bypasses TS6133. Allow declared but unused functions.
// @ts-ignore
function id(d: any[]): any { return d[0]; }
declare var comment: any;
declare var string: any;
declare var regexp: any;
declare var number: any;
declare var identifier: any;
declare var keyword: any;

import { JSLexer } from "./lexer"
import { 
    parseStatement, 
    parseIdentifier, 
    parseNumber, 
    parsePrimary,
    parseExpression,
    parseTerm,
    parseParenExpression 
    } from "./parser"

const filter = d => {
    return d.filter((token) => token !== null);
};
JSLexer.next = (next => () => {
    let tok;
    while ((tok = next.call(JSLexer)) && (tok.type === "WS" || tok.type === "NL")) {}
    return tok;
})(JSLexer.next);


interface NearleyToken {
  value: any;
  [key: string]: any;
};

interface NearleyLexer {
  reset: (chunk: string, info: any) => void;
  next: () => NearleyToken | undefined;
  save: () => any;
  formatError: (token: never) => string;
  has: (tokenType: string) => boolean;
};

interface NearleyRule {
  name: string;
  symbols: NearleySymbol[];
  postprocess?: (d: any[], loc?: number, reject?: {}) => any;
};

type NearleySymbol = string | { literal: any } | { test: (token: any) => boolean };

interface Grammar {
  Lexer: NearleyLexer | undefined;
  ParserRules: NearleyRule[];
  ParserStart: string;
};

const grammar: Grammar = {
  Lexer: JSLexer,
  ParserRules: [
    {"name": "program", "symbols": ["statementList"], "postprocess": id},
    {"name": "statementList$ebnf$1", "symbols": []},
    {"name": "statementList$ebnf$1$subexpression$1", "symbols": ["statement"]},
    {"name": "statementList$ebnf$1$subexpression$1", "symbols": [(JSLexer.has("comment") ? {type: "comment"} : comment)]},
    {"name": "statementList$ebnf$1", "symbols": ["statementList$ebnf$1", "statementList$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "statementList", "symbols": ["statementList$ebnf$1"]},
    {"name": "statement", "symbols": ["block"]},
    {"name": "statement", "symbols": ["variableStatement"]},
    {"name": "statement", "symbols": ["importStatement"]},
    {"name": "statement", "symbols": ["exportStatement"]},
    {"name": "statement", "symbols": ["emptyStatement"]},
    {"name": "statement", "symbols": ["classDeclaration"]},
    {"name": "statement", "symbols": ["functionDeclaration"]},
    {"name": "statement", "symbols": ["expressionStatement"]},
    {"name": "statement", "symbols": ["ifStatement"]},
    {"name": "statement", "symbols": ["iterationStatement"]},
    {"name": "statement", "symbols": ["continueStatement"]},
    {"name": "statement", "symbols": ["breakStatement"]},
    {"name": "statement", "symbols": ["returnStatement"]},
    {"name": "statement", "symbols": ["yieldStatement"]},
    {"name": "statement", "symbols": ["withStatement"]},
    {"name": "statement", "symbols": ["labelledStatement"]},
    {"name": "statement", "symbols": ["switchStatement"]},
    {"name": "statement", "symbols": ["throwStatement"]},
    {"name": "statement", "symbols": ["tryStatement"]},
    {"name": "statement", "symbols": ["debuggerStatement"]},
    {"name": "block$ebnf$1", "symbols": ["statementList"], "postprocess": id},
    {"name": "block$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "block", "symbols": [{"literal":"{"}, "block$ebnf$1", {"literal":"}"}]},
    {"name": "importStatement", "symbols": [{"literal":"import"}, "importFromBlock"]},
    {"name": "importFromBlock$ebnf$1", "symbols": ["importDefault"], "postprocess": id},
    {"name": "importFromBlock$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "importFromBlock$subexpression$1", "symbols": ["importNamespace"]},
    {"name": "importFromBlock$subexpression$1", "symbols": ["importModuleItems"]},
    {"name": "importFromBlock", "symbols": ["importFromBlock$ebnf$1", "importFromBlock$subexpression$1", "importFrom", "eos"]},
    {"name": "importFromBlock", "symbols": [(JSLexer.has("string") ? {type: "string"} : string), "eos"]},
    {"name": "importModuleItems$ebnf$1", "symbols": ["importAliasNameList"], "postprocess": id},
    {"name": "importModuleItems$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "importModuleItems", "symbols": [{"literal":"{"}, "importModuleItems$ebnf$1", {"literal":"}"}]},
    {"name": "importAliasNameList$ebnf$1", "symbols": []},
    {"name": "importAliasNameList$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "importAliasName"]},
    {"name": "importAliasNameList$ebnf$1", "symbols": ["importAliasNameList$ebnf$1", "importAliasNameList$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "importAliasNameList$ebnf$2", "symbols": [{"literal":","}], "postprocess": id},
    {"name": "importAliasNameList$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "importAliasNameList", "symbols": ["importAliasName", "importAliasNameList$ebnf$1", "importAliasNameList$ebnf$2"]},
    {"name": "importAliasName$ebnf$1$subexpression$1", "symbols": [{"literal":"as"}, "importedBinding"]},
    {"name": "importAliasName$ebnf$1", "symbols": ["importAliasName$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "importAliasName$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "importAliasName", "symbols": ["moduleExportName", "importAliasName$ebnf$1"]},
    {"name": "moduleExportName", "symbols": ["identifier"]},
    {"name": "moduleExportName", "symbols": [(JSLexer.has("string") ? {type: "string"} : string)]},
    {"name": "importedBinding", "symbols": ["identifier"]},
    {"name": "importDefault", "symbols": ["aliasName", {"literal":","}]},
    {"name": "importNamespace$subexpression$1", "symbols": [{"literal":"*"}]},
    {"name": "importNamespace$subexpression$1", "symbols": ["identifier"]},
    {"name": "importNamespace$ebnf$1$subexpression$1", "symbols": [{"literal":"as"}, "identifier"]},
    {"name": "importNamespace$ebnf$1", "symbols": ["importNamespace$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "importNamespace$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "importNamespace", "symbols": ["importNamespace$subexpression$1", "importNamespace$ebnf$1"]},
    {"name": "importFrom", "symbols": [{"literal":"from"}, (JSLexer.has("string") ? {type: "string"} : string)]},
    {"name": "aliasName$ebnf$1$subexpression$1", "symbols": [{"literal":"as"}, "identifier"]},
    {"name": "aliasName$ebnf$1", "symbols": ["aliasName$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "aliasName$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "aliasName", "symbols": ["identifier", "aliasName$ebnf$1"]},
    {"name": "exportStatement$ebnf$1", "symbols": [{"literal":"default"}], "postprocess": id},
    {"name": "exportStatement$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "exportStatement$subexpression$1", "symbols": ["exportFromBlock"]},
    {"name": "exportStatement$subexpression$1", "symbols": ["declaration"]},
    {"name": "exportStatement", "symbols": [{"literal":"export"}, "exportStatement$ebnf$1", "exportStatement$subexpression$1", "eos"]},
    {"name": "exportStatement", "symbols": [{"literal":"export"}, {"literal":"default"}, "singleExpression", "eos"]},
    {"name": "exportFromBlock", "symbols": ["importNamespace", "importFrom", "eos"]},
    {"name": "exportFromBlock$ebnf$1", "symbols": ["importFrom"], "postprocess": id},
    {"name": "exportFromBlock$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "exportFromBlock", "symbols": ["exportModuleItems", "exportFromBlock$ebnf$1", "eos"]},
    {"name": "exportModuleItems$ebnf$1", "symbols": ["exportAliasNameList"], "postprocess": id},
    {"name": "exportModuleItems$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "exportModuleItems", "symbols": [{"literal":"{"}, "exportModuleItems$ebnf$1", {"literal":"}"}]},
    {"name": "exportAliasNameList$ebnf$1", "symbols": []},
    {"name": "exportAliasNameList$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "exportAliasName"]},
    {"name": "exportAliasNameList$ebnf$1", "symbols": ["exportAliasNameList$ebnf$1", "exportAliasNameList$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "exportAliasNameList$ebnf$2", "symbols": [{"literal":","}], "postprocess": id},
    {"name": "exportAliasNameList$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "exportAliasNameList", "symbols": ["exportAliasName", "exportAliasNameList$ebnf$1", "exportAliasNameList$ebnf$2"]},
    {"name": "exportAliasName$ebnf$1$subexpression$1", "symbols": [{"literal":"as"}, "moduleExportName"]},
    {"name": "exportAliasName$ebnf$1", "symbols": ["exportAliasName$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "exportAliasName$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "exportAliasName", "symbols": ["moduleExportName", "exportAliasName$ebnf$1"]},
    {"name": "declaration", "symbols": ["variableStatement"]},
    {"name": "declaration", "symbols": ["classDeclaration"]},
    {"name": "declaration", "symbols": ["functionDeclaration"]},
    {"name": "variableStatement", "symbols": ["variableDeclarationList", "eos"]},
    {"name": "variableDeclarationList$ebnf$1", "symbols": []},
    {"name": "variableDeclarationList$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "variableDeclaration"]},
    {"name": "variableDeclarationList$ebnf$1", "symbols": ["variableDeclarationList$ebnf$1", "variableDeclarationList$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "variableDeclarationList", "symbols": ["varModifier", "variableDeclaration", "variableDeclarationList$ebnf$1"]},
    {"name": "variableDeclaration$ebnf$1$subexpression$1", "symbols": [{"literal":"="}, "singleExpression"]},
    {"name": "variableDeclaration$ebnf$1", "symbols": ["variableDeclaration$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "variableDeclaration$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "variableDeclaration", "symbols": ["assignable", "variableDeclaration$ebnf$1"]},
    {"name": "emptyStatement", "symbols": [{"literal":";"}]},
    {"name": "expressionStatement", "symbols": ["expressionSequence", "eos"]},
    {"name": "ifStatement$ebnf$1$subexpression$1", "symbols": [{"literal":"else"}, "statement"]},
    {"name": "ifStatement$ebnf$1", "symbols": ["ifStatement$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "ifStatement$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "ifStatement", "symbols": [{"literal":"if"}, {"literal":"("}, "expressionSequence", {"literal":")"}, "statement", "ifStatement$ebnf$1"]},
    {"name": "iterationStatement", "symbols": [{"literal":"do"}, "statement", {"literal":"while"}, {"literal":"("}, "expressionSequence", {"literal":")"}, "eos"]},
    {"name": "iterationStatement", "symbols": [{"literal":"while"}, {"literal":"("}, "expressionSequence", {"literal":")"}, "statement"]},
    {"name": "iterationStatement$ebnf$1$subexpression$1", "symbols": ["expressionSequence"]},
    {"name": "iterationStatement$ebnf$1$subexpression$1", "symbols": ["variableDeclarationList"]},
    {"name": "iterationStatement$ebnf$1", "symbols": ["iterationStatement$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "iterationStatement$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "iterationStatement$ebnf$2", "symbols": ["expressionSequence"], "postprocess": id},
    {"name": "iterationStatement$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "iterationStatement$ebnf$3", "symbols": ["expressionSequence"], "postprocess": id},
    {"name": "iterationStatement$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "iterationStatement", "symbols": [{"literal":"for"}, {"literal":"("}, "iterationStatement$ebnf$1", {"literal":";"}, "iterationStatement$ebnf$2", {"literal":";"}, "iterationStatement$ebnf$3", {"literal":")"}, "statement"]},
    {"name": "iterationStatement$subexpression$1", "symbols": ["singleExpression"]},
    {"name": "iterationStatement$subexpression$1", "symbols": ["variableDeclarationList"]},
    {"name": "iterationStatement", "symbols": [{"literal":"for"}, {"literal":"("}, "iterationStatement$subexpression$1", {"literal":"in"}, "expressionSequence", {"literal":")"}, "statement"]},
    {"name": "iterationStatement$ebnf$4", "symbols": [{"literal":"await"}], "postprocess": id},
    {"name": "iterationStatement$ebnf$4", "symbols": [], "postprocess": () => null},
    {"name": "iterationStatement$subexpression$2", "symbols": ["singleExpression"]},
    {"name": "iterationStatement$subexpression$2", "symbols": ["variableDeclarationList"]},
    {"name": "iterationStatement", "symbols": [{"literal":"for"}, "iterationStatement$ebnf$4", {"literal":"("}, "iterationStatement$subexpression$2", {"literal":"of"}, "expressionSequence", {"literal":")"}, "statement"]},
    {"name": "varModifier", "symbols": [{"literal":"var"}]},
    {"name": "varModifier", "symbols": [{"literal":"let"}]},
    {"name": "varModifier", "symbols": [{"literal":"const"}]},
    {"name": "continueStatement$ebnf$1", "symbols": ["identifier"], "postprocess": id},
    {"name": "continueStatement$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "continueStatement", "symbols": [{"literal":"continue"}, "continueStatement$ebnf$1", "eos"]},
    {"name": "breakStatement$ebnf$1", "symbols": ["identifier"], "postprocess": id},
    {"name": "breakStatement$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "breakStatement", "symbols": [{"literal":"break"}, "breakStatement$ebnf$1", "eos"]},
    {"name": "returnStatement$ebnf$1", "symbols": ["expressionSequence"], "postprocess": id},
    {"name": "returnStatement$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "returnStatement", "symbols": [{"literal":"return"}, "returnStatement$ebnf$1", "eos"]},
    {"name": "yieldStatement$subexpression$1", "symbols": [{"literal":"yield"}]},
    {"name": "yieldStatement$subexpression$1", "symbols": [{"literal":"yield*"}]},
    {"name": "yieldStatement$ebnf$1", "symbols": ["expressionSequence"], "postprocess": id},
    {"name": "yieldStatement$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "yieldStatement", "symbols": ["yieldStatement$subexpression$1", "yieldStatement$ebnf$1", "eos"]},
    {"name": "withStatement", "symbols": [{"literal":"with"}, {"literal":"("}, "expressionSequence", {"literal":")"}, "statement"]},
    {"name": "switchStatement", "symbols": [{"literal":"switch"}, {"literal":"("}, "expressionSequence", {"literal":")"}, "caseBlock"]},
    {"name": "caseBlock$ebnf$1", "symbols": ["caseClauses"], "postprocess": id},
    {"name": "caseBlock$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "caseBlock$ebnf$2$subexpression$1$ebnf$1", "symbols": ["caseClauses"], "postprocess": id},
    {"name": "caseBlock$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "caseBlock$ebnf$2$subexpression$1", "symbols": ["defaultClause", "caseBlock$ebnf$2$subexpression$1$ebnf$1"]},
    {"name": "caseBlock$ebnf$2", "symbols": ["caseBlock$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "caseBlock$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "caseBlock", "symbols": [{"literal":"{"}, "caseBlock$ebnf$1", "caseBlock$ebnf$2", {"literal":"}"}]},
    {"name": "caseClauses$ebnf$1", "symbols": ["caseClause"]},
    {"name": "caseClauses$ebnf$1", "symbols": ["caseClauses$ebnf$1", "caseClause"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "caseClauses", "symbols": ["caseClauses$ebnf$1"]},
    {"name": "caseClause$ebnf$1", "symbols": ["statementList"], "postprocess": id},
    {"name": "caseClause$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "caseClause", "symbols": [{"literal":"case"}, "expressionSequence", {"literal":":"}, "caseClause$ebnf$1"]},
    {"name": "defaultClause$ebnf$1", "symbols": ["statementList"], "postprocess": id},
    {"name": "defaultClause$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "defaultClause", "symbols": [{"literal":"default"}, {"literal":":"}, "defaultClause$ebnf$1"]},
    {"name": "labelledStatement", "symbols": ["identifier", {"literal":":"}, "statement"]},
    {"name": "throwStatement", "symbols": [{"literal":"throw"}, "expressionSequence", "eos"]},
    {"name": "tryStatement$subexpression$1$ebnf$1", "symbols": ["finallyProduction"], "postprocess": id},
    {"name": "tryStatement$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "tryStatement$subexpression$1", "symbols": ["catchProduction", "tryStatement$subexpression$1$ebnf$1"]},
    {"name": "tryStatement$subexpression$1", "symbols": ["finallyProduction"]},
    {"name": "tryStatement", "symbols": [{"literal":"try"}, "block", "tryStatement$subexpression$1"]},
    {"name": "catchProduction$ebnf$1$subexpression$1$ebnf$1", "symbols": ["assignable"], "postprocess": id},
    {"name": "catchProduction$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "catchProduction$ebnf$1$subexpression$1", "symbols": [{"literal":"("}, "catchProduction$ebnf$1$subexpression$1$ebnf$1", {"literal":")"}]},
    {"name": "catchProduction$ebnf$1", "symbols": ["catchProduction$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "catchProduction$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "catchProduction", "symbols": [{"literal":"catch"}, "catchProduction$ebnf$1", "block"]},
    {"name": "finallyProduction", "symbols": [{"literal":"finally"}, "block"]},
    {"name": "debuggerStatement", "symbols": [{"literal":"debugger"}, "eos"]},
    {"name": "functionDeclaration$ebnf$1", "symbols": [{"literal":"async"}], "postprocess": id},
    {"name": "functionDeclaration$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "functionDeclaration$ebnf$2", "symbols": [{"literal":"*"}], "postprocess": id},
    {"name": "functionDeclaration$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "functionDeclaration$ebnf$3", "symbols": ["formalParameterList"], "postprocess": id},
    {"name": "functionDeclaration$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "functionDeclaration", "symbols": ["functionDeclaration$ebnf$1", {"literal":"function"}, "functionDeclaration$ebnf$2", "identifier", {"literal":"("}, "functionDeclaration$ebnf$3", {"literal":")"}, "functionBody"]},
    {"name": "classDeclaration", "symbols": [{"literal":"class"}, "identifier", "classTail"]},
    {"name": "classTail$ebnf$1$subexpression$1", "symbols": [{"literal":"extends"}, "singleExpression"]},
    {"name": "classTail$ebnf$1", "symbols": ["classTail$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "classTail$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "classTail$ebnf$2", "symbols": []},
    {"name": "classTail$ebnf$2", "symbols": ["classTail$ebnf$2", "classElement"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "classTail", "symbols": ["classTail$ebnf$1", {"literal":"{"}, "classTail$ebnf$2", {"literal":"}"}]},
    {"name": "classElement$ebnf$1$subexpression$1$ebnf$1", "symbols": [{"literal":"static"}], "postprocess": id},
    {"name": "classElement$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "classElement$ebnf$1$subexpression$1", "symbols": ["classElement$ebnf$1$subexpression$1$ebnf$1", "identifier"]},
    {"name": "classElement$ebnf$1", "symbols": ["classElement$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "classElement$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "classElement", "symbols": ["classElement$ebnf$1", "methodDefinition"]},
    {"name": "classElement$ebnf$2$subexpression$1$ebnf$1", "symbols": [{"literal":"static"}], "postprocess": id},
    {"name": "classElement$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "classElement$ebnf$2$subexpression$1", "symbols": ["classElement$ebnf$2$subexpression$1$ebnf$1", "identifier"]},
    {"name": "classElement$ebnf$2", "symbols": ["classElement$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "classElement$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "classElement", "symbols": ["classElement$ebnf$2", "fieldDefinition"]},
    {"name": "classElement$subexpression$1$ebnf$1", "symbols": [{"literal":"static"}], "postprocess": id},
    {"name": "classElement$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "classElement$subexpression$1", "symbols": ["classElement$subexpression$1$ebnf$1", "identifier"]},
    {"name": "classElement", "symbols": ["classElement$subexpression$1", "block"]},
    {"name": "classElement", "symbols": ["emptyStatement"]},
    {"name": "methodDefinition$ebnf$1$subexpression$1$ebnf$1", "symbols": [{"literal":"async"}], "postprocess": id},
    {"name": "methodDefinition$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "methodDefinition$ebnf$1$subexpression$1", "symbols": ["methodDefinition$ebnf$1$subexpression$1$ebnf$1"]},
    {"name": "methodDefinition$ebnf$1", "symbols": ["methodDefinition$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "methodDefinition$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "methodDefinition$ebnf$2", "symbols": [{"literal":"*"}], "postprocess": id},
    {"name": "methodDefinition$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "methodDefinition$ebnf$3", "symbols": ["formalParameterList"], "postprocess": id},
    {"name": "methodDefinition$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "methodDefinition", "symbols": ["methodDefinition$ebnf$1", "methodDefinition$ebnf$2", "classElementName", {"literal":"("}, "methodDefinition$ebnf$3", {"literal":")"}, "functionBody"]},
    {"name": "methodDefinition$ebnf$4", "symbols": [{"literal":"*"}], "postprocess": id},
    {"name": "methodDefinition$ebnf$4", "symbols": [], "postprocess": () => null},
    {"name": "methodDefinition", "symbols": ["methodDefinition$ebnf$4", "getter", {"literal":"("}, {"literal":")"}, "functionBody"]},
    {"name": "methodDefinition$ebnf$5", "symbols": [{"literal":"*"}], "postprocess": id},
    {"name": "methodDefinition$ebnf$5", "symbols": [], "postprocess": () => null},
    {"name": "methodDefinition$ebnf$6", "symbols": ["formalParameterList"], "postprocess": id},
    {"name": "methodDefinition$ebnf$6", "symbols": [], "postprocess": () => null},
    {"name": "methodDefinition", "symbols": ["methodDefinition$ebnf$5", "setter", {"literal":"("}, "methodDefinition$ebnf$6", {"literal":")"}, "functionBody"]},
    {"name": "fieldDefinition$ebnf$1", "symbols": ["initializer"], "postprocess": id},
    {"name": "fieldDefinition$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "fieldDefinition", "symbols": ["classElementName", "fieldDefinition$ebnf$1"]},
    {"name": "classElementName", "symbols": ["propertyName"]},
    {"name": "classElementName", "symbols": ["privateIdentifier"]},
    {"name": "privateIdentifier", "symbols": [{"literal":"#"}, "identifier"]},
    {"name": "formalParameterList$ebnf$1", "symbols": []},
    {"name": "formalParameterList$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "formalParameterArg"]},
    {"name": "formalParameterList$ebnf$1", "symbols": ["formalParameterList$ebnf$1", "formalParameterList$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "formalParameterList$ebnf$2$subexpression$1", "symbols": [{"literal":","}, "lastFormalParameterArg"]},
    {"name": "formalParameterList$ebnf$2", "symbols": ["formalParameterList$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "formalParameterList$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "formalParameterList", "symbols": ["formalParameterArg", "formalParameterList$ebnf$1", "formalParameterList$ebnf$2"]},
    {"name": "formalParameterList", "symbols": ["lastFormalParameterArg"]},
    {"name": "formalParameterArg$ebnf$1$subexpression$1", "symbols": [{"literal":"="}, "singleExpression"]},
    {"name": "formalParameterArg$ebnf$1", "symbols": ["formalParameterArg$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "formalParameterArg$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "formalParameterArg", "symbols": ["assignable", "formalParameterArg$ebnf$1"]},
    {"name": "lastFormalParameterArg", "symbols": [{"literal":"..."}, "singleExpression"]},
    {"name": "functionBody$ebnf$1", "symbols": ["sourceElements"], "postprocess": id},
    {"name": "functionBody$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "functionBody", "symbols": [{"literal":"{"}, "functionBody$ebnf$1", {"literal":"}"}]},
    {"name": "sourceElements$ebnf$1", "symbols": ["sourceElement"]},
    {"name": "sourceElements$ebnf$1", "symbols": ["sourceElements$ebnf$1", "sourceElement"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "sourceElements", "symbols": ["sourceElements$ebnf$1"]},
    {"name": "sourceElement", "symbols": ["statement"]},
    {"name": "arrayLiteral", "symbols": [{"literal":"["}, "elementList", {"literal":"]"}]},
    {"name": "elementList$ebnf$1", "symbols": []},
    {"name": "elementList$ebnf$1", "symbols": ["elementList$ebnf$1", {"literal":","}], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "elementList$ebnf$2", "symbols": ["arrayElement"], "postprocess": id},
    {"name": "elementList$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "elementList$ebnf$3", "symbols": []},
    {"name": "elementList$ebnf$3$subexpression$1$ebnf$1", "symbols": [{"literal":","}]},
    {"name": "elementList$ebnf$3$subexpression$1$ebnf$1", "symbols": ["elementList$ebnf$3$subexpression$1$ebnf$1", {"literal":","}], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "elementList$ebnf$3$subexpression$1", "symbols": ["elementList$ebnf$3$subexpression$1$ebnf$1", "arrayElement"]},
    {"name": "elementList$ebnf$3", "symbols": ["elementList$ebnf$3", "elementList$ebnf$3$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "elementList$ebnf$4", "symbols": []},
    {"name": "elementList$ebnf$4", "symbols": ["elementList$ebnf$4", {"literal":","}], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "elementList", "symbols": ["elementList$ebnf$1", "elementList$ebnf$2", "elementList$ebnf$3", "elementList$ebnf$4"]},
    {"name": "arrayElement$ebnf$1", "symbols": [{"literal":"..."}], "postprocess": id},
    {"name": "arrayElement$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "arrayElement", "symbols": ["arrayElement$ebnf$1", "singleExpression"]},
    {"name": "propertyAssignment", "symbols": ["propertyName", {"literal":":"}, "singleExpression"]},
    {"name": "propertyAssignment", "symbols": [{"literal":"["}, "singleExpression", {"literal":"]"}, {"literal":":"}, "singleExpression"]},
    {"name": "propertyAssignment$ebnf$1", "symbols": [{"literal":"async"}], "postprocess": id},
    {"name": "propertyAssignment$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "propertyAssignment$ebnf$2", "symbols": [{"literal":"*"}], "postprocess": id},
    {"name": "propertyAssignment$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "propertyAssignment$ebnf$3", "symbols": ["formalParameterList"], "postprocess": id},
    {"name": "propertyAssignment$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "propertyAssignment", "symbols": ["propertyAssignment$ebnf$1", "propertyAssignment$ebnf$2", "propertyName", {"literal":"("}, "propertyAssignment$ebnf$3", {"literal":")"}, "functionBody"]},
    {"name": "propertyAssignment", "symbols": ["getter", {"literal":"("}, {"literal":")"}, "functionBody"]},
    {"name": "propertyAssignment", "symbols": ["setter", {"literal":"("}, "formalParameterArg", {"literal":")"}, "functionBody"]},
    {"name": "propertyAssignment$ebnf$4", "symbols": [{"literal":"..."}], "postprocess": id},
    {"name": "propertyAssignment$ebnf$4", "symbols": [], "postprocess": () => null},
    {"name": "propertyAssignment", "symbols": ["propertyAssignment$ebnf$4", "singleExpression"]},
    {"name": "propertyName", "symbols": ["identifier"]},
    {"name": "propertyName", "symbols": [(JSLexer.has("string") ? {type: "string"} : string)]},
    {"name": "propertyName", "symbols": ["numericLiteral"]},
    {"name": "propertyName", "symbols": [{"literal":"["}, "singleExpression", {"literal":"]"}]},
    {"name": "arguments$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "arguments$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "argument"]},
    {"name": "arguments$ebnf$1$subexpression$1$ebnf$1", "symbols": ["arguments$ebnf$1$subexpression$1$ebnf$1", "arguments$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "arguments$ebnf$1$subexpression$1$ebnf$2", "symbols": [{"literal":","}], "postprocess": id},
    {"name": "arguments$ebnf$1$subexpression$1$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "arguments$ebnf$1$subexpression$1", "symbols": ["argument", "arguments$ebnf$1$subexpression$1$ebnf$1", "arguments$ebnf$1$subexpression$1$ebnf$2"]},
    {"name": "arguments$ebnf$1", "symbols": ["arguments$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "arguments$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "arguments", "symbols": [{"literal":"("}, "arguments$ebnf$1", {"literal":")"}]},
    {"name": "argument$ebnf$1", "symbols": [{"literal":"..."}], "postprocess": id},
    {"name": "argument$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "argument$subexpression$1", "symbols": ["singleExpression"]},
    {"name": "argument$subexpression$1", "symbols": ["identifier"]},
    {"name": "argument", "symbols": ["argument$ebnf$1", "argument$subexpression$1"]},
    {"name": "expressionSequence$ebnf$1", "symbols": []},
    {"name": "expressionSequence$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "singleExpression"]},
    {"name": "expressionSequence$ebnf$1", "symbols": ["expressionSequence$ebnf$1", "expressionSequence$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "expressionSequence", "symbols": ["singleExpression", "expressionSequence$ebnf$1"]},
    {"name": "singleExpression", "symbols": ["assignmentExpression"]},
    {"name": "assignmentExpression", "symbols": ["conditionalExpression"]},
    {"name": "assignmentExpression", "symbols": ["leftHandSideExpression", "assignmentOperator", "assignmentExpression"]},
    {"name": "assignmentExpression", "symbols": ["leftHandSideExpression", {"literal":"="}, "assignmentExpression"]},
    {"name": "conditionalExpression", "symbols": ["logicalOrExpression"]},
    {"name": "conditionalExpression", "symbols": ["logicalOrExpression", {"literal":"?"}, "assignmentExpression", {"literal":":"}, "assignmentExpression"]},
    {"name": "logicalOrExpression", "symbols": ["logicalAndExpression"]},
    {"name": "logicalOrExpression", "symbols": ["logicalOrExpression", {"literal":"||"}, "logicalAndExpression"]},
    {"name": "logicalAndExpression", "symbols": ["bitwiseOrExpression"]},
    {"name": "logicalAndExpression", "symbols": ["logicalAndExpression", {"literal":"&&"}, "bitwiseOrExpression"]},
    {"name": "bitwiseOrExpression", "symbols": ["bitwiseXorExpression"]},
    {"name": "bitwiseOrExpression", "symbols": ["bitwiseOrExpression", {"literal":"|"}, "bitwiseXorExpression"]},
    {"name": "bitwiseXorExpression", "symbols": ["bitwiseAndExpression"]},
    {"name": "bitwiseXorExpression", "symbols": ["bitwiseXorExpression", {"literal":"^"}, "bitwiseAndExpression"]},
    {"name": "bitwiseAndExpression", "symbols": ["equalityExpression"]},
    {"name": "bitwiseAndExpression", "symbols": ["bitwiseAndExpression", {"literal":"&"}, "equalityExpression"]},
    {"name": "equalityExpression", "symbols": ["relationalExpression"]},
    {"name": "equalityExpression$subexpression$1", "symbols": [{"literal":"=="}]},
    {"name": "equalityExpression$subexpression$1", "symbols": [{"literal":"!="}]},
    {"name": "equalityExpression$subexpression$1", "symbols": [{"literal":"==="}]},
    {"name": "equalityExpression$subexpression$1", "symbols": [{"literal":"!=="}]},
    {"name": "equalityExpression", "symbols": ["equalityExpression", "equalityExpression$subexpression$1", "relationalExpression"]},
    {"name": "relationalExpression", "symbols": ["shiftExpression"]},
    {"name": "relationalExpression$subexpression$1", "symbols": [{"literal":"<"}]},
    {"name": "relationalExpression$subexpression$1", "symbols": [{"literal":">"}]},
    {"name": "relationalExpression$subexpression$1", "symbols": [{"literal":"<="}]},
    {"name": "relationalExpression$subexpression$1", "symbols": [{"literal":">="}]},
    {"name": "relationalExpression$subexpression$1", "symbols": [{"literal":"instanceof"}]},
    {"name": "relationalExpression$subexpression$1", "symbols": [{"literal":"in"}]},
    {"name": "relationalExpression", "symbols": ["relationalExpression", "relationalExpression$subexpression$1", "shiftExpression"]},
    {"name": "shiftExpression", "symbols": ["additiveExpression"]},
    {"name": "shiftExpression$subexpression$1", "symbols": [{"literal":"<<"}]},
    {"name": "shiftExpression$subexpression$1", "symbols": [{"literal":">>"}]},
    {"name": "shiftExpression$subexpression$1", "symbols": [{"literal":">>>"}]},
    {"name": "shiftExpression", "symbols": ["shiftExpression", "shiftExpression$subexpression$1", "additiveExpression"]},
    {"name": "additiveExpression", "symbols": ["multiplicativeExpression"]},
    {"name": "additiveExpression$subexpression$1", "symbols": [{"literal":"+"}]},
    {"name": "additiveExpression$subexpression$1", "symbols": [{"literal":"-"}]},
    {"name": "additiveExpression", "symbols": ["additiveExpression", "additiveExpression$subexpression$1", "multiplicativeExpression"]},
    {"name": "multiplicativeExpression", "symbols": ["exponentiationExpression"]},
    {"name": "multiplicativeExpression$subexpression$1", "symbols": [{"literal":"*"}]},
    {"name": "multiplicativeExpression$subexpression$1", "symbols": [{"literal":"/"}]},
    {"name": "multiplicativeExpression$subexpression$1", "symbols": [{"literal":"%"}]},
    {"name": "multiplicativeExpression", "symbols": ["multiplicativeExpression", "multiplicativeExpression$subexpression$1", "exponentiationExpression"]},
    {"name": "exponentiationExpression", "symbols": ["unaryExpression"]},
    {"name": "exponentiationExpression", "symbols": ["unaryExpression", {"literal":"**"}, "exponentiationExpression"]},
    {"name": "unaryExpression$subexpression$1", "symbols": [{"literal":"delete"}]},
    {"name": "unaryExpression$subexpression$1", "symbols": [{"literal":"void"}]},
    {"name": "unaryExpression$subexpression$1", "symbols": [{"literal":"typeof"}]},
    {"name": "unaryExpression$subexpression$1", "symbols": [{"literal":"++"}]},
    {"name": "unaryExpression$subexpression$1", "symbols": [{"literal":"--"}]},
    {"name": "unaryExpression$subexpression$1", "symbols": [{"literal":"+"}]},
    {"name": "unaryExpression$subexpression$1", "symbols": [{"literal":"-"}]},
    {"name": "unaryExpression$subexpression$1", "symbols": [{"literal":"~"}]},
    {"name": "unaryExpression$subexpression$1", "symbols": [{"literal":"!"}]},
    {"name": "unaryExpression$subexpression$1", "symbols": [{"literal":"await"}]},
    {"name": "unaryExpression", "symbols": ["unaryExpression$subexpression$1", "unaryExpression"]},
    {"name": "unaryExpression", "symbols": ["postfixExpression"]},
    {"name": "postfixExpression", "symbols": ["leftHandSideExpression"]},
    {"name": "postfixExpression", "symbols": ["leftHandSideExpression", {"literal":"++"}]},
    {"name": "postfixExpression", "symbols": ["leftHandSideExpression", {"literal":"--"}]},
    {"name": "leftHandSideExpression", "symbols": ["callExpression"]},
    {"name": "leftHandSideExpression", "symbols": ["newExpression"]},
    {"name": "leftHandSideExpression", "symbols": ["primaryExpression"]},
    {"name": "callExpression", "symbols": ["memberExpression", "arguments"]},
    {"name": "callExpression", "symbols": ["callExpression", "arguments"]},
    {"name": "memberExpression", "symbols": ["primaryExpression"]},
    {"name": "memberExpression", "symbols": ["memberExpression", {"literal":"["}, "expressionSequence", {"literal":"]"}]},
    {"name": "memberExpression", "symbols": ["memberExpression", {"literal":"."}, "identifier"]},
    {"name": "newExpression", "symbols": [{"literal":"new"}, "memberExpression", "arguments"]},
    {"name": "newExpression", "symbols": [{"literal":"new"}, "memberExpression"]},
    {"name": "primaryExpression", "symbols": ["anonymousFunction"]},
    {"name": "primaryExpression$ebnf$1", "symbols": ["identifier"], "postprocess": id},
    {"name": "primaryExpression$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "primaryExpression", "symbols": [{"literal":"class"}, "primaryExpression$ebnf$1", "classTail"]},
    {"name": "primaryExpression", "symbols": [{"literal":"this"}]},
    {"name": "primaryExpression", "symbols": ["identifier"]},
    {"name": "primaryExpression", "symbols": [{"literal":"super"}]},
    {"name": "primaryExpression", "symbols": ["literal"]},
    {"name": "primaryExpression", "symbols": ["arrayLiteral"]},
    {"name": "primaryExpression", "symbols": ["objectLiteral"]},
    {"name": "primaryExpression", "symbols": [{"literal":"("}, "expressionSequence", {"literal":")"}]},
    {"name": "primaryExpression", "symbols": ["yieldStatement"]},
    {"name": "initializer", "symbols": [{"literal":"="}, "singleExpression"]},
    {"name": "assignable", "symbols": ["identifier"]},
    {"name": "assignable", "symbols": ["keyword"]},
    {"name": "assignable", "symbols": ["arrayLiteral"]},
    {"name": "assignable", "symbols": ["objectLiteral"]},
    {"name": "objectLiteral$ebnf$1$subexpression$1$ebnf$1", "symbols": []},
    {"name": "objectLiteral$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "propertyAssignment"]},
    {"name": "objectLiteral$ebnf$1$subexpression$1$ebnf$1", "symbols": ["objectLiteral$ebnf$1$subexpression$1$ebnf$1", "objectLiteral$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "objectLiteral$ebnf$1$subexpression$1$ebnf$2", "symbols": [{"literal":","}], "postprocess": id},
    {"name": "objectLiteral$ebnf$1$subexpression$1$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "objectLiteral$ebnf$1$subexpression$1", "symbols": ["propertyAssignment", "objectLiteral$ebnf$1$subexpression$1$ebnf$1", "objectLiteral$ebnf$1$subexpression$1$ebnf$2"]},
    {"name": "objectLiteral$ebnf$1", "symbols": ["objectLiteral$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "objectLiteral$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "objectLiteral", "symbols": [{"literal":"{"}, "objectLiteral$ebnf$1", {"literal":"}"}]},
    {"name": "anonymousFunction", "symbols": ["functionDeclaration"]},
    {"name": "anonymousFunction$ebnf$1", "symbols": [{"literal":"async"}], "postprocess": id},
    {"name": "anonymousFunction$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "anonymousFunction$ebnf$2", "symbols": [{"literal":"*"}], "postprocess": id},
    {"name": "anonymousFunction$ebnf$2", "symbols": [], "postprocess": () => null},
    {"name": "anonymousFunction$ebnf$3", "symbols": ["formalParameterList"], "postprocess": id},
    {"name": "anonymousFunction$ebnf$3", "symbols": [], "postprocess": () => null},
    {"name": "anonymousFunction", "symbols": ["anonymousFunction$ebnf$1", {"literal":"function"}, "anonymousFunction$ebnf$2", {"literal":"("}, "anonymousFunction$ebnf$3", {"literal":")"}, "functionBody"]},
    {"name": "anonymousFunction$ebnf$4", "symbols": [{"literal":"async"}], "postprocess": id},
    {"name": "anonymousFunction$ebnf$4", "symbols": [], "postprocess": () => null},
    {"name": "anonymousFunction", "symbols": ["anonymousFunction$ebnf$4", "arrowFunctionParameters", {"literal":"=>"}, "arrowFunctionBody"]},
    {"name": "arrowFunctionParameters", "symbols": ["propertyName"]},
    {"name": "arrowFunctionParameters$ebnf$1", "symbols": ["formalParameterList"], "postprocess": id},
    {"name": "arrowFunctionParameters$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "arrowFunctionParameters", "symbols": [{"literal":"("}, "arrowFunctionParameters$ebnf$1", {"literal":")"}]},
    {"name": "arrowFunctionBody", "symbols": ["singleExpression"]},
    {"name": "arrowFunctionBody", "symbols": ["functionBody"]},
    {"name": "assignmentOperator", "symbols": [{"literal":"*="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":"/="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":"%="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":"+="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":"-="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":"<<="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":">>="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":">>>="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":"&="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":"^="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":"|="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":"**="}]},
    {"name": "assignmentOperator", "symbols": [{"literal":"??="}]},
    {"name": "literal", "symbols": [{"literal":"null"}]},
    {"name": "literal", "symbols": [{"literal":"true"}]},
    {"name": "literal", "symbols": [{"literal":"false"}]},
    {"name": "literal", "symbols": [(JSLexer.has("string") ? {type: "string"} : string)]},
    {"name": "literal", "symbols": ["template", (JSLexer.has("string") ? {type: "string"} : string)]},
    {"name": "literal", "symbols": [(JSLexer.has("regexp") ? {type: "regexp"} : regexp)]},
    {"name": "literal", "symbols": ["numericLiteral"]},
    {"name": "templateStringLiteral$ebnf$1", "symbols": []},
    {"name": "templateStringLiteral$ebnf$1", "symbols": ["templateStringLiteral$ebnf$1", "templateStringAtom"], "postprocess": (d) => d[0].concat([d[1]])},
    {"name": "templateStringLiteral", "symbols": [{"literal":"`"}, "templateStringLiteral$ebnf$1", {"literal":"`"}]},
    {"name": "templateStringAtom", "symbols": ["TemplateStringAtom"]},
    {"name": "templateStringAtom", "symbols": ["TemplateStringStartExpression", "singleExpression", "TemplateCloseBrace"]},
    {"name": "numericLiteral", "symbols": [(JSLexer.has("number") ? {type: "number"} : number)]},
    {"name": "getter$ebnf$1", "symbols": [{"literal":"get"}], "postprocess": id},
    {"name": "getter$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "getter", "symbols": ["getter$ebnf$1", "identifier", "classElementName"]},
    {"name": "setter$ebnf$1", "symbols": [{"literal":"set"}], "postprocess": id},
    {"name": "setter$ebnf$1", "symbols": [], "postprocess": () => null},
    {"name": "setter", "symbols": ["setter$ebnf$1", "identifier", "classElementName"]},
    {"name": "identifier", "symbols": [(JSLexer.has("identifier") ? {type: "identifier"} : identifier)]},
    {"name": "reservedWord", "symbols": ["keyword"]},
    {"name": "reservedWord", "symbols": [{"literal":"null"}]},
    {"name": "reservedWord", "symbols": [{"literal":"true"}]},
    {"name": "reservedWord", "symbols": [{"literal":"false"}]},
    {"name": "keyword", "symbols": [(JSLexer.has("keyword") ? {type: "keyword"} : keyword)]},
    {"name": "eos", "symbols": [{"literal":";"}]}
  ],
  ParserStart: "program",
};

export default grammar;
